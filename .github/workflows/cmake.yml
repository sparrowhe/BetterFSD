name: cmake-ubuntu

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: |
            cd ${{github.workspace}}/build
            make
            
    - name: MV
      run: | 
       cd ${{github.workspace}}/build
       mv fsd ${{github.workspace}}/program_directory/unix/
      
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v2
      with:
          name: Betterfsd_linux_amd64
          path: ${{github.workspace}}/program_directory/unix/
          retention-days: 5
  build-windows:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v3

      - name: Configure CMake & Build
        run: $env:CXXFLAGS="-DWIN32" ; cmake -B ${{github.workspace}}/build ; cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          # Artifact name
          name: fsd-windows
          # A file, directory or wildcard pattern that describes what to upload
          path: ${{github.workspace}}/build/Release/fsd.exe